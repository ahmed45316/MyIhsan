<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Reservation.API</name>
    </assembly>
    <members>
        <member name="T:Reservation.API.Controllers.Base.BaseMainController">
            <inheritdoc />
        </member>
        <member name="F:Reservation.API.Controllers.Base.BaseMainController.TokenBusiness">
            <inheritdoc />
        </member>
        <member name="F:Reservation.API.Controllers.Base.BaseMainController.ResponseHandler">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Base.BaseMainController.#ctor(Reservation.Common.Core.IHandlerResponse)">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Base.BaseMainController.#ctor(Reservation.Common.Core.IHandlerResponse,Reservation.Identity.Service.Core.ITokenBusiness)">
            <inheritdoc />
        </member>
        <member name="T:Reservation.API.Controllers.Base.MainController`2">
            <inheritdoc />
        </member>
        <member name="F:Reservation.API.Controllers.Base.MainController`2.TokenBusiness">
            <inheritdoc />
        </member>
        <member name="F:Reservation.API.Controllers.Base.MainController`2.ResponseHandler">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Base.MainController`2.#ctor(Reservation.Common.Core.IHandlerResponse,Reservation.Identity.Service.Core.IBaseService{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Base.MainController`2.#ctor(Reservation.Common.Core.IHandlerResponse,Reservation.Identity.Service.Core.ITokenBusiness,Reservation.Identity.Service.Core.IBaseService{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Base.MainController`2.Add(`1)">
            <summary>
            Add Entity
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Base.MainController`2.GetAll">
            <summary>
            Get all Data
            </summary>
            <returns></returns>
        </member>
        <member name="T:Reservation.API.Controllers.Secuirty.AccountsController">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.AccountsController.#ctor(Reservation.Common.Core.IHandlerResponse,Reservation.Identity.Service.Interfaces.ILoginServices,Reservation.Identity.Service.Core.ITokenBusiness,Reservation.Identity.Service.Interfaces.IMenuServices)">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.AccountsController.Login(Reservation.Common.Parameters.LoginParameters)">
            <summary>
            Login
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.AccountsController.GetMenu">
            <summary>
            Get Menu
            </summary>
            <returns></returns>
        </member>
        <member name="T:Reservation.API.Controllers.Secuirty.PageController">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.PageController.#ctor(Reservation.Common.Core.IHandlerResponse,Reservation.Identity.Service.Core.ITokenBusiness,Reservation.Identity.Service.Interfaces.IMenuServices)">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.PageController.GetScreensSelect2(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get Screens Select2
            </summary>
            <param name="pageSize"></param>
            <param name="pageNumber"></param>
            <param name="searchTerm"></param>
            <param name="lang"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.PageController.GetChildScreensSelect2(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Get child Screens Select2
            </summary>
            <param name="pageSize"></param>
            <param name="pageNumber"></param>
            <param name="parentId"></param>
            <param name="searchTerm"></param>
            <param name="lang"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.PageController.GetScreenData(System.String,System.String,System.String)">
            <summary>
            Get Screen NotSelected
            </summary>
            <param name="roleId"></param>
            <param name="menuId"></param>
            <param name="childId"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.PageController.GetScreenDataSelected(System.String,System.String,System.String)">
            <summary>
            Get Screen Selected
            </summary>
            <param name="roleId"></param>
            <param name="menuId"></param>
            <param name="childId"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.PageController.SaveScreens(Reservation.Common.Parameters.ScreensAssignedParameters)">
            <summary>
            Save Screens
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Reservation.API.Controllers.Secuirty.RoleController">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.RoleController.#ctor(Reservation.Common.Core.IHandlerResponse,Reservation.Identity.Service.Core.ITokenBusiness,Reservation.Identity.Service.Interfaces.IRoleServices)">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.RoleController.GetRoles(Reservation.Common.Parameters.GetAllRoleParameters)">
            <summary>
            Get All Roles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.RoleController.GetRole(System.String)">
            <summary>
            Get  Role by RoleId
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.RoleController.AddRole(Reservation.Identity.Service.Dtos.GetRoleDto)">
            <summary>
            Add new Role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.RoleController.UpdateRole(Reservation.Identity.Service.Dtos.UpdateRoleDto)">
             <summary>
             Update Role
             </summary>
            <param name="model"></param>
             <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.RoleController.RemoveRoleById(System.String)">
            <summary>
            Remove Role by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.RoleController.GetRoleByName(System.String)">
            <summary>
            Get  Role by Name from stored
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.RoleController.IsNameExists(System.String,System.String)">
            <summary>
            check Name is Exists
            </summary>
            <param name="name"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Reservation.API.Controllers.Secuirty.UserController">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.#ctor(Reservation.Common.Core.IHandlerResponse,Reservation.Identity.Service.Core.ITokenBusiness,Reservation.Identity.Service.Interfaces.IUserServices)">
            <inheritdoc />
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.GetUsers(Reservation.Common.Parameters.GetAllUserParameters)">
            <summary>
            Get Users
            </summary>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.GetUser(System.String,System.String)">
            <summary>
            Get User by Id
            </summary>
            <param name="lang"></param>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.AddUser(Reservation.Identity.Service.Dtos.UserDto)">
            <summary>
            Add User
            </summary>
            <param name="userDto"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.UpdateUser(Reservation.Identity.Service.Dtos.UserDto)">
            <summary>
            Update User
            </summary>
            <param name="userDto"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.RemoveUserById(System.String)">
            <summary>
            Remove User by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.IsUsernameExists(System.String,System.Byte,System.String)">
            <summary>
            Check Fields IsExists
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.GetUsersSelect2(System.Int32,System.Int32,System.String)">
            <summary>
            Get Users Select2
            </summary>
            <param name="pageSize"></param>
            <param name="pageNumber"></param>
            <param name="searchTerm"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.GetUserAssigned(System.String)">
            <summary>
            Get users to assigned to Role 
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Reservation.API.Controllers.Secuirty.UserController.SaveUserAssigned(Reservation.Common.Parameters.AssignUserOnRoleParameters)">
            <summary>
            Save User assigned
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Reservation.API.Extensions.ConfigureServicesExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Reservation.API.Extensions.ConfigureServicesExtensions.AddRegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:Reservation.API.Extensions.UseServiceExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Reservation.API.Extensions.UseServiceExtensions.UseRegisteredService(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:Reservation.API.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Reservation.API.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Reservation.API.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Reservation.API.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Reservation.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Reservation.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Reservation.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
